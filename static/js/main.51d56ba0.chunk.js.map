{"version":3,"sources":["Components/MediaCard.js","Components/API.js","Components/API2.js","Components/lifecycle.js","images/bg.jpg","App.js","reportWebVitals.js","index.js"],"names":["ImgMediaCard","text","value","color","Card","className","CardActionArea","CardContent","style","backgroundColor","Typography","gutterBottom","variant","component","fontSize","start","end","duration","API","useState","confirmed","setconfirmed","recovered","setrecovered","deaths","setdeaths","useEffect","Axios","get","then","res","console","log","data","Grid","container","spacing","item","xs","md","lg","labels","datasets","label","API2","countriesRoute","Lifecycle","props","state","confirm","recoverd","death","setState","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51d56ba0.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\n\r\nexport default function ImgMediaCard({text, value, color}) {\r\n  \r\n\r\n  return (\r\n    <Card className='cardStyle'>\r\n      <CardActionArea>\r\n        <CardContent style={{backgroundColor:color}} >  \r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" >\r\n            {text}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{fontSize:'20px'}}>\r\n          <CountUp  start={0} end={value}\r\n            duration={5}/>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n     \r\n    </Card>\r\n  );\r\n}","import React,{useState,useEffect} from 'react'\r\nimport '../App.css';\r\nimport Axios from 'axios';\r\nimport ImgMediaCard from './MediaCard';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { Doughnut,Bar } from 'react-chartjs-2';\r\nfunction API() {\r\n    const [confirmed,setconfirmed]=useState(0);\r\n    const [recovered,setrecovered]=useState(0);\r\n    const [deaths,setdeaths]=useState(0);\r\nuseEffect(() => {\r\n    Axios.get('https://covid19.mathdro.id/api')\r\n    .then(res=>{\r\n        console.log(res.data)\r\n       // console.log(res.data.confirmed)// data mei mojod att k name dhk k likhte get krne k lye .data k sath\r\n        setconfirmed(res.data.confirmed.value) //set krwadia condirm k variable m\r\n        //console.log(res.data.recovered)\r\n        setrecovered(res.data.recovered.value)\r\n        //console.log(res.data.deaths)\r\n        setdeaths(res.data.deaths.value)\r\n    })\r\n    \r\n},[])\r\n    return (\r\n        <div  >\r\n            <Grid container spacing={3}>\r\n           <Grid item xs={12} md={4} lg={4}>\r\n        <ImgMediaCard  text='Confirmed Cases' value={confirmed}  color='#7FFFD4'   />       \r\n      <ImgMediaCard text='Recovered Cases' value={recovered} color='#F5C9A2' />\r\n      <ImgMediaCard text='Death Cases' value={deaths} color='red' />\r\n        </Grid>\r\n        <Grid item xs={12} md={8} lg={8} >\r\n               {/* *****Graph*** phle npm i chart.js s kia then import kia donut chart phir data dedia */}\r\n\r\n          <Doughnut  data={{\r\n          labels: ['confirmed', 'Recovered', 'Deaths'], //x-axis\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['#7FFFD4', '#F5C9A2', 'red'],\r\n              data: [confirmed, recovered, deaths], //y-axis\r\n             \r\n            },\r\n          ],\r\n        }\r\n       \r\n       }\r\n       />\r\n        </Grid>\r\n        </Grid>\r\n            \r\n           \r\n      \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default API\r\n","import React,{useState,useEffect} from 'react'\r\nimport Axios from 'axios';\r\n\r\nfunction API2() {\r\n    const [country_slug,setcountry_slug]=useState(0);\r\n   \r\nuseEffect(() => {\r\n    Axios.get('https://api.covid19api.com/')\r\n    .then(res=>{\r\n        console.log(res.data.countriesRoute)\r\n      \r\n    })\r\n    \r\n},[])\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default API2\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport ImgMediaCard from './MediaCard';\r\n\r\nexport class Lifecycle extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            confirm:0,\r\n            recoverd:0,\r\n            death:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        Axios.get('https://covid19.mathdro.id/api')\r\n        .then(res=>{\r\n            console.log(res.data)\r\n           this.setState({\r\n               confirm: res.data.confirmed.value,\r\n               recoverd:res.data.recovered.value,\r\n               death:res.data.deaths.value\r\n           })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <li>{this.state.confirm}</li>\r\n                <li>{this.state.recoverd}</li>\r\n                <li>{this.state.death}</li>\r\n                <ImgMediaCard  text='Confirmed Cases' value={this.state.confirm}  color='#F0C5D5'   />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lifecycle\r\n\r\n","export default __webpack_public_path__ + \"static/media/bg.2e307ea0.jpg\";","import { blueGrey } from '@material-ui/core/colors';\r\nimport './App.css';\r\nimport API from './Components/API'\r\nimport API2 from './Components/API2';\r\nimport Lifecycle from './Components/lifecycle';\r\n\r\nimport img from './images/bg.jpg'\r\nfunction App() {\r\n  return (\r\n    <div className='bg' >\r\n      <API  />\r\n     <API2/>\r\n   <Lifecycle/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}